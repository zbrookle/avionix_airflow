name: CI

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Cache conda
      uses: actions/cache@v1
      env:
        # Increase this value to reset cache if environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
    - uses: conda-incubator/setup-miniconda@v1.7.0
      with:
        auto-update-conda: true
        activate-environment: avionix_airflow
        python-version: 3.8
        channel-priority: strict
        environment-file: environment.yml
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: Looking for unwanted patterns
      shell: bash -l {0}
      run: |
        chmod +x ci/code_checks.sh
        ci/code_checks.sh patterns
      if: always()

    - name: Linting
      shell: bash -l {0}
      run: |
        ci/code_checks.sh lint
      if: always()

    - name: Dependencies consistency
      shell: bash -l {0}
      run: |
        ci/code_checks.sh dependencies
      if: always()

    - name: Checks on imported code
      shell: bash -l {0}
      run: |
        ci/code_checks.sh code
      if: always()

    - name: Running doctests
      shell: bash -l {0}
      run: |
        ci/code_checks.sh doctests
      if: always()

    - name: Docstring validation
      shell: bash -l {0}
      run: |
        ci/code_checks.sh docstrings
      if: always()

    - name: Typing validation
      shell: bash -l {0}
      run: |
        ci/code_checks.sh typing
      if: always()

    - name: Setup Minikube
      uses: manusa/actions-setup-minikube@v2.0.1
      with:
        minikube version: 'v1.11.0'
        kubernetes version: 'v1.18.3'
        driver: docker

    - name: Setup environment
      shell: bash -l {0}
      run: |
        chmod +x ci/setup_env.sh
        ci/setup_env.sh
      if: always()

    - name: Unit tests
      shell: bash -l {0}
      run: |
        chmod +x ci/run_tests.sh
        ci/run_tests.sh
      if: always()